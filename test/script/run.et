module run

asset scripts:
    path: ../asset/run

asset scripts_success:
    path: ../asset/run-success

asset scripts_fail:
    path: ../asset/run-fail


test TrivialRun:
    spawn as p 
    with p:
        send "load ${scripts.path}/trivial.et"
        expect /load-done/

        send "run AlwaysSucceeds"
        local:
            expect /(run-.*)/ capture done
            guard (done == "run-done")

        send "run AlwaysFails"
        local:
            expect /match-fail .*/
            expect /(run-.*)/ capture done
            guard (done == "run-failed")


test SimpleRun:
    let should_succeed = [ "bool", "command-ignore" ]
    let should_fail = [ "bool" ]
    spawn as p

    with p:
        for file in should_succeed:
            send "load ${scripts_success.path}/$file.et"
            local:
                expect /(load-.*)/ capture done
                guard (done == "load-done")
            flush

            send "run Test"
            local:
                expect /(run-.*)/ capture done
                guard (done == "run-done")
            flush

        for file in should_fail:
            send "load ${scripts_fail.path}/$file.et"
            local:
                expect /(load-.*)/ capture done
                guard (done == "load-done")
            flush

            send "run Test"
            local:
                expect /(run-.*)/ capture done
                guard (done == "run-failed")
            flush


test RunConfig:
    node n
    shell on n:
        cp ${scripts.path}/erebos-tester.yaml .
        mkdir tools
        cp ${scripts.path}/tools/echo.sh ./tools/tool
        mkdir scripts
        # TODO: it seems that namespaces are not properly cleaned up after the failed test
        #cp ${scripts.path}/trivial.et ./scripts/
        cp ${scripts.path}/echo.et ./scripts/

    spawn as p on n

    with p:
        send "load-config"
        expect /load-config-done/
        send "run-all"
        #expect /run-test-result AlwaysSucceeds done/
        #expect /run-test-result AlwaysFails failed/
        expect /child-stdin p abcdef/
        expect /child-stdout p abcdef/
        expect /match p abcdef/
        expect /run-test-result ExpectEcho done/
        expect /run-all-done/


test GetSysInfo:
    node n
    shell on n:
        cp ${scripts.path}/erebos-tester.yaml .
        mkdir tools
        cp ${scripts.path}/tools/sysinfo.sh ./tools/tool
        mkdir scripts
        cp ${scripts.path}/sysinfo.et ./scripts/

    spawn as p on n

    with p:
        send "load-config"
        expect /load-config-done/
        send "run SysInfo"
        expect /run-done/


test CallStack:
    spawn as p
    with p:
        send "load ${scripts.path}/callstack.et"
        expect /load-done/

        send "run A"
        expect /match-fail guard failed/
        expect /match-fail-line .*\/callstack.et:3:5: .*/
        expect /match-fail-var x 1/
        local:
            expect /(run-.*)/ capture done
            guard (done == "run-failed")
